(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{432:function(t,s,e){"use strict";e.r(s);var r=e(14),o=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("记录一些使用WSL做开发环境遇到的问题和解决办法，不定期更新。注意，这里的WSL都是指WSL2。")]),t._v(" "),s("blockquote",[s("p",[t._v("注：如果没有非用不可的理由，还是不建议使用WSL2，坑太多了，主要是网络方面的，非常影响效率")])]),t._v(" "),s("h2",{attrs:{id:"wsl与vpn的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wsl与vpn的问题"}},[t._v("#")]),t._v(" WSL与VPN的问题")]),t._v(" "),s("ol",[s("li",[t._v("域名解析不正常")])]),t._v(" "),s("p",[t._v("可以ping一下或者dig一下内网域名，看下能否正常解析ip，如果无法正常解析则属于此类。")]),t._v(" "),s("p",[t._v("github上有一个相关的issue："),s("a",{attrs:{href:"https://github.com/microsoft/WSL/issues/5068",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击这里"),s("OutboundLink")],1),t._v("，原因似乎是宿主机连接VPN后，WSL没有把VPN的DNS resolver加上。")]),t._v(" "),s("p",[t._v("倒是有一个非常简单粗暴稳定的解决办法，就是先连接VPN，再打开WSL。其他解决办法似乎都不够稳定。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("http正常访问，https访问不了")])]),t._v(" "),s("p",[t._v("比如执行 "),s("code",[t._v("curl http://www.mokahr.com")]),t._v(" 可以得到正常响应，但是 "),s("code",[t._v("curl https://www.mokahr.com")]),t._v(" 不行，那就属于此类。")]),t._v(" "),s("p",[t._v("github上也有一个相关issue，"),s("a",{attrs:{href:"https://github.com/microsoft/WSL/issues/4698",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击这里"),s("OutboundLink")],1),t._v("，原因是Path MTU discovery black问题，似乎是说windows和linux的MTU不一致，导致WSL发的包超过了路由的限制，但是路由又没有正确返回错误包，最终请求卡住了。")]),t._v(" "),s("p",[t._v("解决办法是修改WSL的MTU，"),s("code",[t._v("sudo ip link set dev eth0 mtu 1400")]),t._v("，这个办法屡试不爽。完整的解释过程在"),s("a",{attrs:{href:"https://github.com/microsoft/WSL/issues/4698#issuecomment-728967624",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),s("OutboundLink")],1)]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("开启VPN后WSL无法翻墙了")])]),t._v(" "),s("p",[t._v("这个跟VPN有关，如果你使用的VPN是全局隧道，由于VPN路由表优先级最高，流量都会从VPN走，所以肯定是没法翻墙的。")]),t._v(" "),s("h2",{attrs:{id:"failed-to-establish-a-socket-connection-to-proxies-proxy-127-0-0-1-7890"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#failed-to-establish-a-socket-connection-to-proxies-proxy-127-0-0-1-7890"}},[t._v("#")]),t._v(' Failed to establish a socket connection to proxies: ["PROXY 127.0.0.1:7890"]')]),t._v(" "),s("p",[t._v("如果遇到这个错误，说明是代理地址不对，需要显式写出WSL2的虚拟网卡的ip地址。")]),t._v(" "),s("p",[t._v("可以去powershell里执行ipconfig看到WSL的地址，然后覆盖WSL中的http_proxy和https_proxy，例如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("http_proxy=http://172.21.0.1:7890\nhttps_proxy=http://172.21.0.1:7890\n")])])]),s("h2",{attrs:{id:"wsl如何使用cypress-gui"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wsl如何使用cypress-gui"}},[t._v("#")]),t._v(" WSL如何使用Cypress GUI")]),t._v(" "),s("p",[t._v("Cypress GUI使用了linux原生的GUI，默认情况下WSL无法启动，不过可以参考"),s("a",{attrs:{href:"https://nickymeuleman.netlify.app/blog/gui-on-wsl2-cypress",target:"_blank",rel:"noopener noreferrer"}},[t._v("这篇博客"),s("OutboundLink")],1),t._v("解决。")])])}),[],!1,null,null,null);s.default=o.exports}}]);